version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
    type: controlplane # Defines the role of the machine within the cluster.
    token: snl3q0.bgrvxz19ins0xrgt # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEEwYXo4S1RIZGhxWmR5SlB4YzJPU09NQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5UQTFNVEF4TVRVMU5EQmFGdzB6TlRBMU1EZ3hNVFUxTkRCYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBaEdPcnFKV3FsUjlkamNEamJBK2EyTm5DWW9PUkJ3Tk1LV2NkClJXUnZ5ZW1qWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVaXZ5T1h3US82a2Nlb2IrUwpvMFdsQW1QRW5OUXdCUVlESzJWd0EwRUF0TGI1UlZpcEJqTlp4a1krejU4aEFRNmZyd2lXRWppb2UrWWtIN2tkCjB1YmFzRURrTTNXdE91aVdqcURhUDQ0clc2NWh1V3FDeUc3Z0IxNWJFWGpyQlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTmdvczBMaU5WNUg4QnprQ1B6U2wwMUo2ZzN3ZVVRbTVRMUJvdVhhd2gyeAotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10

    # Used to provide additional options to the kubelet.
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.32.3 # The `image` field is an optional reference to an alternative kubelet image.
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value

        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true

        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider

        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network: {}
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.0/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.

    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #     driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #       driver: virtio_net # Kernel driver, supports matching by wildcard.

    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #           driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.

    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # Enable STP on this bridge.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

    #       # # Configure this device as a bridge port.
    #       # bridgePort:
    #       #     master: br0 # The name of the bridge master interface

    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true

    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.

    #       # # Wireguard specific configuration.

    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24

    #       # # Virtual (shared) IP address configuration.

    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.

    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1

    # # Used to statically set arbitrary search domains.
    # searchDomains:
    #     - example.org
    #     - example.com

    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld

    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.

    # Used to provide instructions for installations.
    install:
        disk: /dev/sda # The disk used for installations.
        image: ghcr.io/siderolabs/installer:v1.9.5 # Allows for supplying the image used to perform the installation.
        wipe: false # Indicates if the installation disk should be wiped at installation time.
        
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k

        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/

    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.

    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
        stableHostname: true # Enable stable default hostname.
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            enabled: true # Enable KubePrism support - will start local load balancing proxy.
            port: 7445 # KubePrism port.
        # Configures host DNS caching resolver.
        hostDNS:
            enabled: true # Enable host DNS caching resolver.
            forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
        
        # # Configure Talos API access from Kubernetes pods.
        # kubernetesTalosAPIAccess:
        #     enabled: true # Enable Talos API access from Kubernetes pods.
        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
        #     allowedRoles:
        #         - os:reader
        #     # The list of Kubernetes namespaces Talos API access is available from.
        #     allowedKubernetesNamespaces:
        #         - kube-system
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    
    # # Provides machine specific control plane configuration options.

    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.

    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # Used to partition, format and mount additional disks.

    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.

    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824

    # # Allows the addition of user specified files.

    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use

    # # The `env` field allows for the addition of environment variables.

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Used to configure the machine's time settings.

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

    # # Used to configure the machine's sysctls.

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # Used to configure the machine's sysfs.

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64

    #         # # Defines the encryption sector size.
    #         # blockSize: 4096

    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue

    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.

    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.

    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # Override (patch) settings in the default OCI runtime spec for CRI containers.

    # # override default open file limit
    # baseRuntimeSpecOverrides:
    #     process:
    #         rlimits:
    #             - hard: 1024
    #               soft: 1024
    #               type: RLIMIT_NOFILE

    # # Configures the node annotations for the machine.

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # Configures the node taints for the machine. Effect is optional.

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    id: 6ga9EFOb2ZZyA12RaFonSkjd_9SzMclZQ1fHKAD_Fcw= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: wTVlHfX6OkGTwNurInRHAOGBgrDocRSkkNwjd18dp9k= # Shared secret of cluster (base64 encoded random 32 bytes).
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://192.168.0.201:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: talos-proxmox-cluster # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        dnsDomain: cluster.local # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
        
        # # The CNI used.
        # cni:
        #     name: custom # Name of CNI to use.
        #     # URLs containing manifests to apply for the CNI.
        #     urls:
        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    token: noo3iy.uc41plyt2ezfjqiu # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: Z35DV4F49b+xxAYVtim+v6Fo3ZadTTmwiReXoxg+ljc= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRTFp4VE9saHc3ZkpxQWVHbjdXLzhIREFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTFNRFV4TURFeE5UVTBNRm9YRFRNMU1EVXdPREV4TlRVMApNRm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCSk90a1crS1ExSU1jSWFGU1M4OG1GVHZYbHBQeC9jN3VzaSs0dEo2SndzcHFnMlI2L0ZlTUY0UVNFUmYKVHEyVjVleEd5TE8vVVN6WEhsT3NaS2R3aGplallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVV6d0xma2J2SnhOV1ZtUDdqNlI4akg1UG9oMDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnT0VyQytwZDkKTTBqeFB0UGVMUHRjRkhqQjdPZFUzc0VhNytrbG9pQ0JxOVlDSVFETjlSbGpnalpGZHJBMmNDV3Z3R1RwTEQwTgpheEhBclMxamE4ekJET1NLUUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUdXRk1FRE1CdkdhTGY3dHJYMGpyL1FnajNyNGlzaWU4bGVrTWJHTUM0OFVvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFazYyUmI0cERVZ3h3aG9WSkx6eVlWTzllV2svSDl6dTZ5TDdpMG5vbkN5bXFEWkhyOFY0dwpYaEJJUkY5T3JaWGw3RWJJczc5UkxOY2VVNnhrcDNDR053PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZVENDQVFhZ0F3SUJBZ0lSQUlzZ0lyR2RSRTNBMXBaaUg5bWlVNVF3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU5UQTFNVEF4TVRVMU5EQmFGdzB6TlRBMU1EZ3hNVFUxTkRCYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVFEekZ6Wi9ualZmdmdsVWs2dWxTb0NIaXh4bC9jeTFSQ2lLOVErR3YzTk5TajVzeWJYClRPNzlKYlo2RU9nRFhibWxNSWNKM1BXcisyTFliaDhGYmVEV28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGTXFwRUpLUEViNTFlSnRMemZyMVdDci80VFVETUFvR0NDcUdTTTQ5QkFNQ0Ewa0FNRVlDCklRQ1RNb1BlYnE1RnZzQ2JhaERqcEx4UDY4TURPV1dxZnJXTXdqYi9CekFPaEFJaEFNekg5ZTFad3ZDTWwrY0gKRERlNEQxN2Y0K1JId2gvaDV0U2oyYUFSV0hQawotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUhGMGRhUkdJQk1Sb0NHcno2cis2TXVWUHNHS0NFNVN3RDBDMG9CMGU5SzZvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQTh4YzJmNTQxWDc0SlZKT3JwVXFBaDRzY1pmM010VVFvaXZVUGhyOXpUVW8rYk1tMTB6dQovU1cyZWhEb0ExMjVwVENIQ2R6MXEvdGkyRzRmQlczZzFnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS2dJQkFBS0NBZ0VBdy9maUo2cGgyYUhpSU1adlUwWEV3OWVOSjhKaDdxcjA0OGs3NEZYQWlKUlREbDhRCitUYmxuam5nS0pkNjd6QjVGU0ZIbitXM0JUdlV1RTV4VW5xdFZvM1BIbFd6R25xM1RVOUZMZnJheG9jUDFIY2cKd2h5M3ZlYXdVd1R4NG9EQ1I0bEo3ODdZRU1NdUFIejh6c08yYVF1UEIwbzErZkUrc2JMVmJ0aXlwanFiTURGcgp1aVRSWStsNlhCTFpvL095aS9aQTNHVnFPRGl2dWhxNGJJTk5SVXcxMy8xQnN4amM1bHAvT2l4N05tOXY2cjkyCnJQZlR1MDkwNWNkbm1Kd3JnMG5QeXdPb2RzZDVhZkZpQ0k2eFVlNks2eHNmMFlDd3AzYnlEeDVvbk52Y1R6K3EKb3owY1FBeFhjUms0a0NvZXd4NCtmaUFSRC9vRVVQazBOeDZQNVN4dmsxOFBURHVPRmJnTnUwNXNXUnlPSmxndgpCM1ZvVDFaSWxjdTJtS2JiVVFaRXZ5QWw1ZUdSSTVyc0pmTjJtVks4WUFXKzVOWDVkS2hWSFpHRWNiRms4K2g5ClhHbnhCQ2RGalMxbDhpaDZaWGp0UDVuVEZUQWNqc2JBKzZrWVV6djRzYS9Qbm1jU29FY1RTRlJOYWdPTFl3eEUKVTg5eDFkZTVLRXh1VEZSMnBLdG5vUWZUc1p4YlgzQnQ4Mml2cFN4Z1ZFaGJVcjRLKzJSM1dFNXhoTWsyUk9Jbgp5M3VHVFBEOXZ4UkEzelRUUXR2THlyQitaWGZTSzNzY0hQbVE3TCtQRlNwWk5YaUJ3cTk3dms3NU95QW1QNjRWCk45TGFQZ040UjJNS01lTlY1TTZXQy9lY3lGRnpBWWJBdU12Q3Y2VU1WaDVxV2RxMVdpejVjQ2VqK1FjQ0F3RUEKQVFLQ0FnQlQ0TDdCQVpGK1NHYjBabHJ5QnBQUXkyc1VrSVBBVnhZWWhXS0dnODJ6NStDZzd4bmh3WmlJbi9jTgpDTUZLcmJHMTFKZkduZGszZVVOMFc4YnZhYWpWdWo3am1nVGVHWlpwbGJ0amtkS2dWT0Qyck1LdHN3TUdXajR3CldwWjV2MmpvbTUrMDhCRFZJK1dGdWZtdk9sL1NHR3R3MEZmSUVuVW1OQWhjdUkzR3pxRHNBTXMrVWxINWRNNjEKcUMvVm1CSmRDOXI1T3NNN0t6QXo5UW5wRUU0N2tnSWhURklacVZPcm1TS0pzTTVRSDJTRTBzeWwvakYzSSt4QwpDWmFTNEkxVFZYMkdSSnVQczVPSlFCTVkzSktUSWduOTFZOUo2YzR5NzV0dDB6TXRxSUZrdmpoNFJFamFOUzRjCkw1SmhTbFgrWit5UnFZSUVGNXhQV0VyOEtLMm54akViVzRuZGN6YVFaVVM0N0QvQi9wZDZ4V3hnNFg3TTFscXAKZi9YRGpDYmxJZGNtMlZPZk1GTmNubXcrNVFpMkpybnloL0hyQ0hOYUNLWU94WE0zQytWQ2Fhc0NiaUhKbUxLWQpPTE5XZlg0czlYTWx5bGVxS0NPRnhvV2VkVXpMYUdyTlcxQmZSQjAvNVFUYjZhVjRKdEl6L1ZHN1lyZDlSem5vCjM3Yi9FRTgrMEE5YmEzc1hWalZ2MnY3RGNiS3kyRVNCdGcrVHhpRXQra0Jlbm50Q0dpeXV2TUhMamw1Z3ppcnUKZzdyeHZORXhpQTYrUExwSXlvQTJ3MmxvS0lGY0dROFlIalFucHBmcFo2dFpJTmdRenZvNEQ2dFNueGVlWDNNTgpvVlRiRE1pWHBGalVZOWYzRXA4MkpSZ2ZtL3VyS0RRbnBWOXZEdFBQa2tjb2VRK3BzUUtDQVFFQXl2MkJPZEt0CkJqR2M4Y2VZblg4bCthY1RnTHliUWpwZ0NNbzdDZ0lnRWs3anRPeS9mSUpmQnlNbFNJUzZPL2o3RFgrVnlMOW0KNml1YTJXWEJaSWVTVnF4Y2NJWkNsM0dFcUFtYXBmN1hvY3ZWbU9EYlNSRTFpNTZRVmVvSWJSSWpQSDNBeSt1Kwp6aUhiN1o2bWptYW14STFpNW0zQ2sxY2ZpR1NEbmF2Y2FKcnYxRVFiU1BSR2dnNlhDaWxwWVZ2bEh0UnlHbWh5CmpYd1dpRFEvY0tXZ2g3Z3lDOXRKb00wMm42bHhlR2ZXV0F5aW01RlF0VG9zYm8yTkxNSjhJYkZOQjYxRGluVDMKb2YrY1Z4akdIaHBJZHZjTUJaZGo0ZVk3R1ZoeElUajJCckxUSGRnUXRlSFYvUnhOaGpKVWxSK1NEYkNpcEFoTQpWSlNVbzh5STU4Z01PUUtDQVFFQTl5VHdwOGthSmJENytZdElncS9WTGJhQUhyaXpkVzMvZHIrc0hJSXk5MU90CmNPcjlFZ1FyUEVhdjhFb0JCMDJmSnRaS2VOTlVpaFlFUTNubXpzY2RTd29XRE5adjZ2ajlLNElqVXY2cm5kUTkKZC8xMzRLeURmeXMxNnpOYWV2VFZBZW8vSU5zWkN1blFEbEpSWW5NSTVSUEpZR0t2WWo1NEFmZEE3VjNlUElnRQppWGtUbGtaS2U1c2MyWWJEcGIrR3JUVHBJenRkN3dFK3BrU2tBWjQzOTRJUUExbW53UStGS1BLNEg4Z1ZPd3FZClVXSWI2Y0h6UC9ZbUMwQ2lyYTJmK0ZJWTZDamo4bUpIN3dJYkFYZXJZblN3UnlYSTBsbkliSVFmMlBpQUkzVzMKaXNFaDVuU2UzN0dWbE9hVXVqNkt0UmF3bTR3SjZGWXN1YkZrSVg2dlB3S0NBUUVBeE51R3FGSUZGSjJteTkrNgp4UHJiRkRzUXNlZTNWa29RZWxYTlhjNWoxZjJGM1I5QU1QcXFOOXpBdW94bG8rVzVhd1RSZVFjT1Fva1pPajN4CmlKSGx2SUtaZjFMbFg4TnFXQ0JBUnoxWFY0UzdWL0N4R1RKRVVHdnRKRFM4Q1RMdTB5cE5nRFhYTEVjdjUwalYKMUFIL04xeTZqaWZoN0V3d3UzQm5KOURWQnVsREx3TUJ4d1dISDNnUXlIMFN3cVdCRlI0SXJrMmUwbEdGOUg5ZgpDdHJGVFBtNEowRjZMU1QzRlc0WktpRGhnVEIzdmhEMlNWcnFYaWlPd2RxMjBXSUdCeXpqOUhHcytnRlBXRFFoClptNHMycHFKb1I2SmNqbDZGUUZ0YlQrMWNSZVpvRGE3TmZpWE0wbHdjWFY4QzhhN09PV1ZSU2o3QlllMmd3ZkgKdWFpTEdRS0NBUUVBMWw2MlYvTTV1T1BSVEYwaUlpbCtVYzV4UnpTU2hSTktlYWc4RStaamF1Q3NHcnZaazUwRwpHNXg4MDRKOWJlWklYQm1ZTTBHcm5MTUlNN2N6R3J6ZmpjMUwzd3JKdlJrSUVJc3JOTHd1QkJLcTFyK0hFZHpSCm1xYlNlQmJ0THFYYmRYUElHaW14aVNQU0Vmb1pHYm9LUnhsb25UQThUSTArN3dXV3pjMlVEUkUyVGtBMVd5M1IKUVhJRURqSzAxYnBSaVQvUjBYdVhPTTd0bHE4SFMxZi8xN0o3VFV5aEUvYndXOXBkRjBRb0ZqUlVkcE1RL3l2NgpZTXFUcVVNQldJQzN0MThPdDZGd1J6ZzBpUDVjaW1OUXgyL0x6NHJZckl5d0ttQllkNHpsS056Y3ZZQlVkVjlHCngyVjBCOW9SdTVLd0llOXlkUmw5Sm9oSTl6RUZWNEJaWlFLQ0FRRUFzcU9vU1c0OGw1bHJwS25VVkpGVlpHWTAKSmhlalBMMTlWM0tOcVM1M1VnaE9ib0JJdDhQRVJCMGhwYjJzNm8xQ1BiUnkyam5SdUVqc0FWRDdOTnFjdFZ2YQpNSEh4SEVkbGlSaEtZaDl2R29QVDREekY2cnQ3cTBiWll2NU5XTmVpNkpzMVIrYXhGTDIxeDlwUXFtR3p0cDU5CmFHaDY2RllpOHZCMlFYOU5tZENjS1F4NnlTWkJ0TDZJRnRyNzBtS2hJZ0dQZGtqSmdBVmZlcFAvRUpJNDkrOXIKcCtKSXByNkNyOXBIdXZ4OHZLUzA3MjMyOXhmNENJMHc5ZlRNM0xod0R2eDJFc2JzS3lWNS9ySEF4Y0hTekgzVwpKUEhIZEVpWGY4TjJKNkJKbWtLVkJpNEVEVnNtbGdXZG9zM3pPN3dKdzhlUDI2R3lEcWFBSWkzc0gxcjVBdz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
    # API server specific configuration options.
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.32.3 # The container image used in the API server manifest.
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.0.201
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
        # Configure the API server admission plugins.
        admissionControl:
            - name: PodSecurity # Name is the name of the admission controller.
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
        
        # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.
        # authorizationConfig:
        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
        #       name: webhook # Name is used to describe the authorizer.
        #       # webhook is the configuration for the webhook authorizer.
        #       webhook:
        #         connectionInfo:
        #             type: InClusterConfig
        #         failurePolicy: Deny
        #         matchConditionSubjectAccessReviewVersion: v1
        #         matchConditions:
        #             - expression: has(request.resourceAttributes)
        #             - expression: '!(\''system:serviceaccounts:kube-system\'' in request.groups)'
        #         subjectAccessReviewVersion: v1
        #         timeout: 3s
        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
        #       name: in-cluster-authorizer # Name is used to describe the authorizer.
        #       # webhook is the configuration for the webhook authorizer.
        #       webhook:
        #         connectionInfo:
        #             type: InClusterConfig
        #         failurePolicy: NoOpinion
        #         matchConditionSubjectAccessReviewVersion: v1
        #         subjectAccessReviewVersion: v1
        #         timeout: 3s
    # Controller manager server specific configuration options.
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.32.3 # The container image used in the controller manager manifest.
    # Kube-proxy server-specific configuration options
    proxy:
        image: registry.k8s.io/kube-proxy:v1.32.3 # The container image used in the kube-proxy manifest.
        
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.32.3 # The container image used in the scheduler manifest.
    # Configures cluster member discovery.
    discovery:
        enabled: true # Enable the cluster membership discovery feature.
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                disabled: true # Disable Kubernetes discovery registry.
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNPZ0F3SUJBZ0lRQVpQdyt5WXpvSkVCVXNLUEtJM3BXakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkxTURVeE1ERXhOVFUwTUZvWERUTTFNRFV3T0RFeE5UVTBNRm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkI2UG96V0VwVXhjCkJYZ3M2OWkvVHdBYmhpVi9Bd01veExYTThWZ3MwWkZhS29wOE1GcHhpanA4SWJOcUtxSEdCZHNoeU4remp6TVYKNWxKeE11dUtjVGlqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVZGZOY2VqMGtpblZhCjVEMVYwejN4aFJrYzM2TXdDZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBTHJ4RExlOHY4UFgvWHgwbGNCMmY1Q2wKMkVDY093MXpmSkhKV1NYd1VwWVpBaUVBcnAvekdkNlVVcVpLdE9DSlI3S3J2SnU4c1pnTDZLdXFzSStvWVNjUQpDbm89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSURUMy9oMU1BWU54eVNiZmNWNW1OUG81alJuUXZBUmFGZ1VDUXdpUlBDWFRvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSG8rak5ZU2xURndGZUN6cjJMOVBBQnVHSlg4REF5akV0Y3p4V0N6UmtWb3Fpbnd3V25HSwpPbndoczJvcW9jWUYyeUhJMzdPUE14WG1VbkV5NjRweE9BPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        
        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.5.19

        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
        # advertisedSubnets:
        #     - 10.0.0.0/8
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml

    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.12.0 # The `image` field is an override to the default coredns image.

    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).

    # # Allows running workload on control-plane nodes.
    # allowSchedulingOnControlPlanes: true
